server:
  port: 8080
  address: 0.0.0.0

spring:
  application:
    name: backend

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate # flyway 때문에 validate 으로 변경
    properties:
      hibernate:
        globally_quoted_identifiers: true # sql 예약어와 일치하는 필드명 구분
        format_sql: true
    open-in-view: false
    defer-datasource-initialization: false # ddl-auto 실행 후 data.sql 로 데이터 삽입
    generate-ddl: false

  sql: #data.sql 의 DDL 실행
    init:
      encoding: utf-8
      mode: always
      data-locations: classpath:sql/data.sql, classpath:sql/dummy.sql

  flyway:
    enabled: true
    baseline-on-migrate: true

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: '${REDIS_PASSWORD}'
      url: redis://:${REDIS_PASSWORD}@${REDIS_HOST}:6379
      ssl:
        enabled: true


spring-doc:
  swagger-ui:
    tags-sorter: alpha # tag 순서 - 알파벳
    operations-sorter : method # HTTP 메소드 순서
    doc-expansion : none # 펼치지 않기

openapi:
  url: ${OPENAPI_URL}
  authKey: ${OPENAPI_AUTH_KEY}
  maxRetryCounts: 15

kakao:
  publicKeyUri: https://kauth.kakao.com/.well-known/jwks.json

apple:
  publicKeyUri: https://appleid.apple.com/auth/keys

jwt:
  secretKey: ${JWT_SECRET}
  accessTokenExpireTime: ${ACCESS_TOKEN_EXPIRE_TIME}
  refreshTokenExpireTime: ${REFRESH_TOKEN_EXPIRE_TIME}

isLocal: ${IS_LOCAL}
